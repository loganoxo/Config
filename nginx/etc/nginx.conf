# 运行用户
# user  nginx;

#启动进程; auto: 会设置成cpu的核心数
worker_processes  1;

error_log  /Users/logan/Logs/nginx/error.log; #默认的error级别,只记录错误信息及更高级别的信息
error_log  /Users/logan/Logs/nginx/error.log  notice; #记录的是较为普通的运行信息,记录一些常规事件和系统状态
#error_log  /Users/logan/Logs/nginx/error.log  info; #记录较为详细的信息,比 notice 级别更为详细,适合于调试和监控

pid        /Users/logan/Logs/nginx/nginx.pid;

#工作模式及连接数上限
events    {
    worker_connections  256; #单个后台worker process进程的最大并发链接数,设为1024;mac上最大256
}

http    {
    #设定mime类型(邮件支持类型),类型由mime.types文件定义
    include       mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$http_origin" "$scheme://$http_host$request_uri" ';

    log_format json_escape '{
    "remote_addr":"$remote_addr",
    "remote_user":"$remote_user",
    "time_local":"$time_local",
    "request":"$request",
    "status":"$status",
    "body_bytes_sent":"$body_bytes_sent",
    "http_referer":"$http_referer",
    "http_user_agent":"$http_user_agent",
    "http_x_forwarded_for":"$http_x_forwarded_for",
    "http_origin":"$http_origin",
    "URL":"$scheme://$http_host$request_uri"
}
';

    # 应用日志格式到访问日志文件
    access_log /Users/logan/Logs/nginx/access_main.log main;
    # tail -f /Users/logan/Logs/nginx/access_json.log | jq
    access_log /Users/logan/Logs/nginx/access_json.json json_escape;

    sendfile        on; #见file_server_nginx.conf
    #tcp_nopush     on; #见file_server_nginx.conf

    # 用来设置 HTTP 持久连接(Keep-Alive)的超时时间的指令,单位为秒;超过该时间后,Nginx 将关闭连接,释放资源
    keepalive_timeout  65;

    gzip on; #开启gzip压缩
    gzip_min_length 1k; #设置对数据启用压缩的最少字节数
    gzip_buffers    4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 4; #设置数据的压缩等级,等级为1-9,压缩比从小到大
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml; #设置需要压缩的数据格式
    gzip_vary on;

    ####################################################################################
    server    {
        listen 18080;
        server_name  localhost;
        charset utf-8;
        default_type text/plain;

        # 针对这个server单独设置日志,会导致在 http模块 中统一设置的日志中 不记录这个server
        # access_log /Users/logan/Logs/nginx/18080_log.json json_escape;

        location /    {
            #确定根目录,html是相对于nginx的执行文件的目录;即/opt/homebrew/Cellar/nginx/1.27.3/html;这个目录被homebrew软链接到/opt/homebrew/var/www,我又把Data/Config/nginx/www软链接到了这个目录,所以这里的html实际上就是www
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html    {
            root   html;
        }
    }
    include servers/*.conf;
}
