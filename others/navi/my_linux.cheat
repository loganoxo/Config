# 界面提示在括号内输入变量名（例如 <branch> ）
# 如果有一个以 $ 开头的对应行，则会显示建议。否则，用户将能够为它键入任何值。

% my, linux
$ file: find . -maxdepth 1 -type f ! -name ".DS_Store" -print0 | xargs -0 -I {} echo "\"{}\""
# find查找文件; -print0 选项来以空字符分隔文件名输出。xargs 命令使用 -0 选项来接受以空字符分隔的输入，并使用 -I {} 来指定占位符。echo "\"{}\"" 用来确保参数被双引号包围。
find . -maxdepth 1 -type f ! -name ".DS_Store" -print0 | xargs -0 -I {} echo "\"{}\""

# 查看路由表
netstat -nr
# 生成非对称密钥
ssh-keygen -t ed25519 -C <email>
# 查看所有hosts
dscacheutil -q host
# 查看域名解析过程
traceroute <url>
# cat查看文件，grep前后十行
cat <file> grep -10 <keyword>
# curl 访问url
curl --user-agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36" <url>
# 在后台运行命令，并忽略挂断信号，这样即使用户退出登录或关闭终端，命令也会继续运行,&: 将命令置于后台运行
nohup <command> &
# 在后台运行jar,2是标准错误输出(stderr),&1是标准输出(stdout),2>&1代表错误信息也输出到标准输出上，>a.log是把标准输出(因为2>&1,此时就包含错误输出了)写入文件
nohup java -jar spring-boot-demo.jar>springboot.log 2>&1 &

% my, ln
# ln -sf source_dir link_name  ---创建一个名为 link_name 的符号链接，指向 source_dir 
# -s: 表示创建符号链接（软链接）。软链接是一个指向另一个文件或目录的引用
# 软链接特点：可以跨越不同的文件系统。可以链接目录。删除软链接不会影响原始文件或目录。
# 不使用任何选项即可创建硬链接。语法为 ln source.txt link.txt
# 硬链接特点：只能链接文件，不能链接目录。必须位于同一文件系统中。删除硬链接不会影响原始文件的访问权限和内容，只有在所有链接都被删除后，文件才会被系统释放并回收磁盘空间。
# 硬链接：1、修改link.txt后，source.txt 同步被修改；2、删除source.txt，link.txt还存在，并且文件内容还在；所以硬链接适合做文件备份
# 创建软链接 -f: 表示强制操作，即如果目标文件已经存在，强制删除它，然后创建新的链接
ln -sf <source_dir> <link_name>
# 创建硬链接 -f: 表示强制操作，即如果目标文件已经存在，强制删除它，然后创建新的链接
ln -f <source_dir> <link_name>

% my, cp
@ my, linux
$ source_dir: find . -maxdepth 1 -type d ! -name ".DS_Store" -print0 | xargs -0 -I {} echo "\"{}\""
# 复制文件到某个目录内
cp <file> <directory>
# 常用复制文件，-i有同名文件时，提示确认，-v显示文件的复制信息。
cp -iv <file> <directory>
# 复制文件到某个目录内并重命名
cp <file> <directory>/<filename>
# 当目标目录内含有同名文件时，提示确认
cp -i <file> <directory>
# 如果有同名文件，强制覆盖目标文件
cp -f <file> <directory>
# 复制目录,如果destination_dir存在，则把整个source_dir目录复制到destination_dir内；若destination_dir不存在，则创建destination_dir，并把source_dir内的所有内容复制到destination_dir内
cp -r <source_dir> <destination_dir>
# 复制目录，显示每个文件的复制进度。
cp -r -v <source_dir> <destination_dir>

% my, mv
@ my, linux
# 移动文件到某个目录内
mv <file> <directory>
# 移动文件到某个目录内并重命名
mv <file> <directory>/<filename>
# 当目标目录内含有同名文件时，提示确认
mv -i <file> <directory>
# 如果有同名文件，强制覆盖目标文件
mv -f <file> <directory>
# 移动目录(没有-r)，如果destination_dir存在，则把整个source_dir目录复制到destination_dir内；若destination_dir不存在，则创建destination_dir，并把source_dir内的所有内容复制到destination_dir内
mv <source_dir> <destination_dir>
# 移动目录，显示目录的复制进度。
mv -v <source_dir> <destination_dir>
# 移动文件，显示文件的复制进度。
mv -v <file> <directory>

% my, mkdir
# 创建单个目录,dir/to/目录存在
mkdir <dir>/<to>/<directory>
# 创建多级目录，使用 -p 选项可以创建多级目录，即如果目录的上级目录不存在，也会一并创建
mkdir -p <dir>/<to>/<directory>
# 创建目录,并显示详细信息
mkdir -v <directory>



