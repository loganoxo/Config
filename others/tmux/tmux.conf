# --------------------------------------------------- Tmux Config -----------------------------------------------------------

# ----------------------------------------------------- prefix -----------------------------------------------------------
# 修改指令前缀
set -g prefix C-a #
unbind C-b # C-b即Ctrl+b键，unbind意味着解除绑定
bind C-a send-prefix # 绑定Ctrl+a为新的指令前缀

# 从tmux v1.6版起，支持设置第二个指令前缀
# set-option -g prefix2 ` # 设置一个不常用的`键作为指令前缀，按键更快些

# 添加载在配置文件指令为： r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."


# --------------------------------------------------- 更改新增面板键 -----------------------------------------------------------
unbind '"'
bind -r - splitw -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录
unbind %
bind -r | splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

# --------------------------------------------------- 开启鼠标支持 -----------------------------------------------------------
# v2.1及以上的版本
set-option -g mouse on #开启鼠标支持

# 修改iterm2的标题
set-option -g set-titles on
set-option -g set-titles-string "tmux - #{session_name} - #{host}"

# --------------------------------------------------- vim 风格 -----------------------------------------------------------
# 开启256颜色支持
set -g default-terminal "xterm-256color"

# 绑定hjkl键为面板切换的上下左右键

bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→

# 面板调整大小
# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令

bind -r ^k resizep -U 10 # 绑定Ctrl+k为往↑调整面板边缘10个单元格
bind -r ^j resizep -D 10 # 绑定Ctrl+j为往↓调整面板边缘10个单元格
bind -r ^h resizep -L 10 # 绑定Ctrl+h为往←调整面板边缘10个单元格
bind -r ^l resizep -R 10 # 绑定Ctrl+l为往→调整面板边缘10个单元格

# 复制模式更改为 vi 风格
# 进入复制模式 快捷键：prefix + [

setw -g mode-keys vi # 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键

# --------------------------------------------------- 复制粘贴 -----------------------------------------------------------

# 复制模式向 vi 靠拢

#旧版本：
#bind -t vi-copy v begin-selection  # 绑定v键为开始选择文本
#bind -t vi-copy y copy-selection # 绑定y键为复制选中文本
bind Escape copy-mode # 绑定esc键为进入复制模式
# 新版本：
bind -T copy-mode-vi v send -X begin-selection # 开始复制
bind -T copy-mode-vi y send -X copy-selection # 复制剪切板
# bind p pasteb # 绑定p键为粘贴文本（p键默认用于进入上一个窗口，不建议覆盖）


# --------------------------------------------------- 其他 -----------------------------------------------------------

#设置窗口面板起始序号
set -g base-index 1 # 设置窗口的起始下标为1
set -g pane-base-index 1 # 设置面板的起始下标为1
set -g focus-events on
set-window-option -g automatic-rename off
set-window-option -g monitor-activity off



# --------------------------------------------------- 状态栏 -----------------------------------------------------------

set -g status-left "#[bg=#FF661D] 🐶 #S " # 状态栏左侧内容

set -g status-interval 1 # 状态栏刷新时间
set -g status-justify left # 状态栏列表左对齐
setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知

set -g status-bg black # 设置状态栏背景黑色
set -g status-fg yellow # 设置状态栏前景黄色
set -g status-style "bg=black, fg=yellow" # 状态栏前景背景色

set -g status-right 'Continuum status: #{continuum_status}' # 状态栏右侧内容
set -g status-left-length 300 # 状态栏左边长度300
set -g status-right-length 500 # 状态栏左边长度500

set -wg window-status-format " #I #W " # 状态栏窗口名称格式
set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
set -wg window-status-separator "   " # 状态栏窗口名称之间的间隔
set -wg window-status-current-style "bg=red" # 状态栏当前窗口名称的样式
set -wg window-status-last-style "fg=red" # 状态栏最后一个窗口名称的样式

set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色
# --------------------------------------------------- 插件 -----------------------------------------------------------
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'dracula/tmux'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'



set -g @resurrect-capture-pane-contents 'on' # 开启恢复面板内容功能
set -g @resurrect-save-shell-history 'on' #恢复shell的历史记录
set -g @resurrect-processes 'ssh mysql redis-server npm' #保存运行的程序


# mux Continuum默认每隔15mins备份一次，我设置的是一天一次
set -g @continuum-save-interval '1440'
# set -g @continuum-save-interval '0' #关闭自动备份
# set -g @continuum-restore 'on' # 启用自动恢复
# Tmux Continuum提供了一个查看运行状态的插值

# set -g status-right 'ss #{continuum_status}'

# 在Terminal 或者 iTerm2 中自动全屏启用tmux
# set -g @continuum-boot 'on'









# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# --------------------------------------------------- End -----------------------------------------------------------





