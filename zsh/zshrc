# zshrc : 用zsh打开交互式shell时加载此文件

# zmodload zsh/zprof # 记录每次启动交互式shell时,记录各种函数执行时间到内存,在当前shell中执行zprof显示;

# 加载环境变量,在zshenv中配置了,会自动加载,这里重复配置保险一点
export __PATH_MY_CNF="$HOME/Data/Config"                    # 我自己的配置文件目录
export __PATH_MY_SOFT="$HOME/Data/Software"                 # 我自己的软件目录
export __PATH_MY_CNF_SENSITIVE="$HOME/Data/ConfigSensitive" # 本地敏感数据目录
export __PATH_HOME_CONFIG="$HOME/.config"                   # 默认配置目录

# 加载初始化配置
source "${__PATH_MY_CNF}/zsh/init.sh"

# 重载配置文件
alias rr="echo 'reloading...'&&source ~/.zshrc"

# navi
# export NAVI_CONFIG="${__PATH_HOME_CONFIG}/navi/config.yaml" #不配置,则默认在~/.config/navi/config.yaml
if command -v navi &>/dev/null; then
    eval "$(navi widget zsh)"
    source "${__PATH_MY_CNF}/others/navi/navi.sh" #加载navi配置,覆盖 eval "$(navi widget zsh)"
fi

# zoxide
export _ZO_DATA_DIR=${__PATH_MY_SOFT}/zoxide
export _ZO_EXCLUDE_DIRS="/:$HOME:$HOME/private/*:/Users/logan/Temp" #排除某些目录
if command -v zoxide &>/dev/null; then
    eval "$(zoxide init --no-cmd zsh)"
fi
alias z="__zoxide_z"   # z <path> 直接跳转到最佳匹配的目录
alias zz="__zoxide_zi" # zz <path> 通过fzf

########################### 加载其他 ###########################

# 加载 主题和插件 配置 ( starship omz omb )
source "${__PATH_MY_CNF}/zsh/framework.sh"

# 加载 通用alias
source "${__PATH_MY_CNF}/zsh/common_alias.sh"

# 加载 fzf配置
source "${__PATH_MY_CNF}/zsh/fzf.sh"
# source ${__PATH_MY_CNF}/zsh/ranger.sh #加载ranger配置

# 最后加载的脚本
source "${__PATH_MY_CNF}/zsh/end.sh"
